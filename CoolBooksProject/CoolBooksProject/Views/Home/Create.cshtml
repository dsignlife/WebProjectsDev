@using System.Net.Mime
@model CoolBooksProject.Models.Reviews
  
@{
    ViewBag.Datetime = DateTime.Now;
    
}


<h2>Create</h2>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Reviews</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Title)
        @Html.HiddenFor(model => model.BookId)
        
        

        
        <div class="form-group">
            @Html.LabelFor(model => model.Created, "Created", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Created, new {@value = ViewBag.Datetime, @class = "form-control" , disabled = "disabled" , @readonly = "readonly", placeholder  = ViewBag.Datetime})
                @*@Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })*@
            </div>
        </div>


        
        <div class="form-group">
            @Html.LabelFor(model => model.BookId, "BookId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BookId, "ViewBag.bookId",new { @value = ViewBag.bookId, @class = "form-control" , disabled = "disabled", @readonly = "readonly",  placeholder  = ViewBag.bookId })
                @*@Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })*@
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" , value = ViewBag.UserId} , disabled = "disabled", @readonly = "readonly", placeholder  = ViewBag.UserId})
                @*   @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })*@
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div> 
        
        
        
        

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
